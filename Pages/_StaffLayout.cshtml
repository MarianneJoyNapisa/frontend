@using System.Security.Claims
@using Microsoft.EntityFrameworkCore
@using HomeownersMS.Data
@inject HomeownersContext context

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] | Blue Peak Living</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" />
    <link href="https://fonts.googleapis.com/css2?family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="~/css/_global.css" />
    <link rel="stylesheet" href="~/css/_header.css" />
    <link rel="stylesheet" href="~/css/_sidenav.css" />
    <style>
        #notificationList * {
            font-size: small !important;
        }

        #notification .dropdown-toggle::after {
            display: none;
        }
        .bell-icon {
            position: relative;
        }
        .bell-icon #unreadCount {
            position: absolute;
            top: 0;
            right: 0;
            font-size: 8px;
            color: white;
        }
    </style>
</head>

<body>
    @Html.AntiForgeryToken()
    <!-- Header -->
    <div class="headerPage">
        <button class="sideNav_toggleBtn" id="sideNav_toggleBtn">
            <i class="bi bi-list fs-4 p-2"></i>
        </button>
        <h3 class="m-0">
            <a class="ghost-link text-light fw-bold" asp-page="/Dashboard/Index">@ViewData["HeaderTitle"]</a>
        </h3>
        <i class="bi bi-bell fs-4 p-2 bell-icon"></i>
    </div>

    @{
        var username = Context.User?.Identity?.Name ?? "Guest";
        // Get the resident's profile image and name directly from the database
        var (profileImagePath, staffName) = await Task.Run(async () => {
            var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
            Console.WriteLine(userId);
            if (userId != null && int.TryParse(userId, out int staffId))
            {
                Console.WriteLine(staffId);
                var staff = await context.Staffs.FirstOrDefaultAsync(r => r.UserId == staffId);
                if (staff != null)
                {
                    var name = $"{staff.FName} {staff.LName}".Trim();
                    return (staff.ProfileImage ?? "", name);
                }
            }
            return ("", "Guest");
        });
        
        var profileImageUrl = !string.IsNullOrEmpty(profileImagePath?.ToString()) 
            ? Url.Content($"~/{profileImagePath}")
            : Url.Content("~/images/default-profile.jpg");
        ViewData["CurrentPage"] = ViewContext.RouteData.Values["page"]?.ToString();
    }

    <!-- Side Navigation -->
    <div class="sideNavBar" id="sidenavBar">
        <!-- User Profile Section -->
        <a class="ghost-link" asp-page="/Profile/ProfileStaff">
            <div class="userProfile">
                <img src="@profileImageUrl" class="profile-avatar"/>
                <div class="userInfo">
                    <p class="profile-name">@staffName</p>
                    <p class="user-type">@username</p>
                </div>
            </div>
        </a>

        <!-- Navigation Links -->
        <div class="mainfunc_navLinks">
            <a asp-page="/Dashboard/Index" class="navItem @(ViewData["CurrentPage"]?.ToString() == "/Dashboard/IndexStaff" ? "active" : "")">
                <i class="bi bi-house-door-fill"></i>
                <span>Dashboard</span>
            </a>
            <a asp-page="/Staff/Services/Index" class="navItem @(ViewData["CurrentPage"]?.ToString()?.StartsWith("/Staff/Services") == true ? "active" : "")">
                <i class="bi bi-person-fill-gear"></i>
                <span>Services Management</span>
            </a>
            <a asp-page="/Community/Community"
                class="navItem @(ViewData["CurrentPage"]?.ToString()?.StartsWith("/Community") == true ? "active" : "")">
                <i class="bi bi-chat-left-text-fill"></i>
                <span>Community</span>
            </a>
        </div>

        <div class="genfunc_navLinks">
            <a asp-page="/Settings/Index" class="navItem @(ViewData["CurrentPage"]?.ToString() == "/Settings" ? "active" : "")">
                <i class="bi bi-gear-fill"></i>
                <span>Settings</span>
            </a>
            <a asp-page="/Account/Logout" class="navItem @(ViewData["CurrentPage"]?.ToString() == "/Account/Logout" ? "active" : "")">
                <i class="bi bi-box-arrow-right"></i>
                <span>Logout</span>
            </a>
        </div>
    </div>

    <div class="overlay" id="overlay"></div>

    <!-- Main Content Area -->
    <div class="dashboard container-fluid mainSection">
        @RenderBody() <!-- This is where the content of Reservation.cshtml will be rendered -->
    </div>

    <!-- Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/SideNavjs.js"></script>

    @await RenderSectionAsync("Scripts", required: false)
</body>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        console.log('render!0');
        // Load appearance settings
        const settings = JSON.parse(localStorage.getItem('appearanceSettings')) || {};
        const html = document.documentElement;
        
        // Apply dark mode
        if (settings.darkMode) {
            html.setAttribute('data-bs-theme', 'dark');
        }
        
        // Apply primary color
        if (settings.primaryColor) {
            html.classList.add(`theme-${settings.primaryColor}`);
        } else {
            html.classList.add('theme-blue'); // Default
        }
        
        // Apply layout density
        if (settings.layoutDensity) {
            html.classList.add(`density-${settings.layoutDensity}`);
        } else {
            html.classList.add('density-comfortable'); // Default
        }
    });
</script>

</html>