@page
@model HomeownersMS.Pages.Community.CommunityModel
@using Microsoft.AspNetCore.Authorization
@using HomeownersMS.Data
@using HomeownersMS.Models
@using Microsoft.AspNetCore.Identity
@{
    // Dynamic Layout Selection
    if (User.IsInRole("admin"))
    {
        Layout = "_AdminLayout";
    }
    else if (User.IsInRole("staff"))
    {
        Layout = "_StaffLayout";
    }
    else if (User.IsInRole("resident"))
    {
        Layout = "_ResidentLayout";
    }
    else
    {
        Layout = "_Layout"; // Fallback layout
    }

    ViewData["HeaderTitle"] = "Community";
    ViewData["Title"] = "Community";
    var username = HttpContext?.User?.Identity?.Name ?? "Guest";
    ViewData["Username"] = username;
}

@functions {
    private string GetProfileImageUrl(User user)
    {
        string defaultProfileImage = "/images/default-profile.jpg";
        if (user == null) return defaultProfileImage;

        if (User.IsInRole("resident") && user.Resident?.ProfileImage != null)
        {
            return $"/{user.Resident.ProfileImage}";
        }
        else if (User.IsInRole("admin") && user.Admin?.ProfileImage != null)
        {
            return $"/{user.Admin.ProfileImage}";
        }
        else if (User.IsInRole("staff") && user.Staff?.ProfileImage != null)
        {
            return $"/{user.Staff.ProfileImage}";
        }

        return defaultProfileImage;
    }
}

<div class="container-fluid px-4 py-4">
    <div class="card shadow-sm rounded-3">
        <div class="card-body">
            <div class="row mb-3">
                <!-- Search Bar -->
                <div class="col-10">
                    <div class="input-group">
                        <input type="text" class="form-control border-end-0" placeholder="Search..." aria-label="Search">
                        <button class="btn btn-input-icon" type="button"><i class="bi bi-search"></i></button>
                    </div>
                </div>

                <!-- Filter and Sort Buttons -->
                <div class="col-2 d-flex align-items-center justify-content-end">
                    <button class="btn btn-sm btn-primary me-2"><i class="bi bi-filter"></i></button>
                    <button class="btn btn-sm btn-secondary"><i class="bi bi-sort-down"></i></button>
                </div>
            </div>

            <!-- New Post Button -->
            @if (User.Identity.IsAuthenticated)
            {
                <div class="d-flex justify-content-start mb-4 gap-2">
                    <button class="btn btn-primary" id="new-thread-button">
                        <i class="bi bi-plus-lg me-2"></i> New Post
                    </button>
                </div>

                <!-- New Post Form -->
                <div class="card mb-4 d-none" id="new-thread-form">
                    <div class="card-body">
                        <form method="post">
                            <div class="mb-3">
                                <input type="text" class="form-control" name="Title" placeholder="Post Title" required>
                            </div>
                            <div class="mb-3">
                                <textarea class="form-control" name="Content" placeholder="Write your post here..." rows="4" required></textarea>
                            </div>
                            <div class="mb-3">
                                <select name="Type" class="form-select" required>
                                    <option value="">Select Category</option>
                                    <option value="@CommunityPost.Types.concern">Concern</option>
                                    <option value="@CommunityPost.Types.suggestion">Suggestion</option>
                                    <option value="@CommunityPost.Types.general">General</option>
                                    <option value="@CommunityPost.Types.advice">Advice</option>
                                </select>
                            </div>
                            <div class="d-flex justify-content-end gap-2">
                                <button type="button" class="btn btn-secondary" id="cancel-thread">Cancel</button>
                                <button type="submit" class="btn btn-primary">Post</button>
                            </div>
                        </form>
                    </div>
                </div>
            }

            <!-- Posts List -->
            @if (Model.Posts != null && Model.Posts.Any())
            {
                foreach (var post in Model.Posts)
                {
                    <div class="card mb-4">
                        <div class="card-header bg-light d-flex justify-content-between align-items-center">
                            <div class="d-flex align-items-center">
                                <img src="@GetProfileImageUrl(post.User)" 
                                     alt="User Avatar" 
                                     class="rounded-circle me-2" 
                                     width="40" height="40">
                                <div>
                                    <div class="fw-bold">@post.User?.Username</div>
                                    <div class="d-flex gap-2">
                                        @if (post.Type.HasValue)
                                        {
                                            <span class="badge">@post.Type</span>
                                        }
                                        @if (post.User != null)
                                        {
                                            <span class="badge" style="  background-color: var(--bs-secondary-bg-subtle);   color: var(--bs-secondary);">@post.User.Privilege.ToString()</span>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="d-flex align-items-center">
                                <small class="text-muted me-2">@post.CreatedAt.ToString("g")</small>
                                @if (User.Identity.IsAuthenticated && post.CreatedBy == int.Parse(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value))
                                {
                                    <div class="dropdown">
                                        <button class="btn btn-sm" type="button" data-bs-toggle="dropdown">
                                            <i class="bi bi-three-dots-vertical"></i>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-end">
                                            <li>
                                                <button class="dropdown-item edit-post-btn"
                                                        data-post-id="@post.CommunityPostId"
                                                        data-original-title="@post.Title"
                                                        data-original-content="@post.Content"
                                                        data-original-type="@post.Type">
                                                    Edit
                                                </button>
                                            </li>
                                            <li>
                                                <button class="dropdown-item delete-post-btn"
                                                        data-post-id="@post.CommunityPostId">
                                                    Delete
                                                </button>
                                            </li>
                                        </ul>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">@post.Title</h5>
                            <div class="card-text mb-3">
                                @if (post.Content.Length > 150)
                                {
                                    @post.Content.Substring(0, 150)
                                    <span id="dots-@post.CommunityPostId">...</span>
                                    <span id="more-@post.CommunityPostId" style="display:none">@post.Content.Substring(150)</span>
                                    <a href="javascript:void(0)" class="read-more"
                                       onclick="toggleReadMore('@post.CommunityPostId')">Read More</a>
                                }
                                else
                                {
                                    @post.Content
                                }
                            </div>
                            @*
                            <!-- Voting -->
                            <div class="d-flex align-items-center mb-3">
                                @{
                                    var userId = User.Identity.IsAuthenticated ? 
                                        int.Parse(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value) : 0;
                                    var userVote = post.Votes.FirstOrDefault(v => v.UserId == userId)?.IsUpvote;
                                }
                                <button type="button" class="btn btn-sm btn-outline-secondary me-2 upvote-btn @(userVote == true ? "active" : "")"
                                        data-post-id="@post.CommunityPostId" data-is-upvote="true">
                                    <i class="bi bi-arrow-up"></i>
                                </button>
                                <span class="me-2 net-votes" data-post-id="@post.CommunityPostId">
                                    @(post.Votes.Count(v => v.IsUpvote == true) - post.Votes.Count(v => v.IsUpvote == false))
                                </span>
                                <button type="button" class="btn btn-sm btn-outline-secondary downvote-btn @(userVote == false ? "active" : "")"
                                        data-post-id="@post.CommunityPostId" data-is-upvote="false">
                                    <i class="bi bi-arrow-down"></i>
                                </button>
                            </div>
                            *@

                            <!-- Comments Section -->
                            <div class="border-top pt-3">
                                <div class="d-flex justify-content-between align-items-center mb-2">
                                    <h6 class="mb-0">
                                        <i class="bi bi-chat-left-text me-1"></i> 
                                        @(post.Comments?.Count ?? 0) comments
                                    </h6>
                                    <button class="btn btn-sm btn-link" 
                                            type="button" 
                                            data-bs-toggle="collapse" 
                                            data-bs-target="#comments-@post.CommunityPostId">
                                        Show comments
                                    </button>
                                </div>
                                
                                <div class="collapse" id="comments-@post.CommunityPostId">
                                    <!-- Existing Comments -->
                                    @foreach (var comment in post.Comments ?? new List<CommunityComment>())
                                    {
                                        <div class="card mb-2">
                                            <div class="card-body p-3">
                                                <div class="d-flex justify-content-between mb-2">
                                                    <div class="d-flex align-items-center">
                                                        <img src="@GetProfileImageUrl(comment.User)"
                                                             alt="User Avatar"
                                                             class="rounded-circle me-2"
                                                             width="30" height="30">
                                                        <strong>@comment.User?.Username</strong>
                                                    </div>
                                                    <small class="text-muted">@comment.CreatedAt.ToString("g")</small>
                                                </div>
                                                <p class="mb-0">@comment.Content</p>
                                                @if (User.Identity.IsAuthenticated && comment.UserId == int.Parse(User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value))
                                                {
                                                    <div class="d-flex justify-content-end gap-2 mt-2">
                                                        <button class="btn btn-sm btn-outline-primary edit-comment-btn"
                                                                data-comment-id="@comment.CommunityCommentId"
                                                                data-original-content="@comment.Content">
                                                            Edit
                                                        </button>
                                                        <button class="btn btn-sm btn-outline-danger delete-comment-btn"
                                                                data-comment-id="@comment.CommunityCommentId">
                                                            Delete
                                                        </button>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    }
                                    
                                    <!-- Add Comment Form -->
                                    @if (User.Identity.IsAuthenticated)
                                    {
                                        <form method="post" asp-page-handler="AddComment" class="mt-3">
                                            <input type="hidden" name="postId" value="@post.CommunityPostId">
                                            <div class="input-group">
                                                <textarea name="commentContent" class="form-control" placeholder="Add a comment..." required></textarea>
                                                <button type="submit" class="btn btn-primary">
                                                    <i class="bi bi-send"></i>
                                                </button>
                                            </div>
                                        </form>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            }
            else
            {
                <div class="text-center py-5">
                    <i class="bi bi-chat-square-text display-4 text-muted mb-3"></i>
                    <h5>No posts yet</h5>
                    <p class="text-muted">Be the first to share something with the community</p>
                    @if (User.Identity.IsAuthenticated)
                    {
                        <button class="btn btn-primary mt-2" id="empty-new-thread-button">
                            <i class="bi bi-plus-lg me-2"></i> Create Post
                        </button>
                    }
                </div>
            }
            
            <!-- Load More Button -->
            <div class="d-flex justify-content-center mt-4">
                <button class="btn btn-outline-primary">Load More</button>
            </div>
        </div>
    </div>
</div>

<!-- Modals (keep existing) -->
<div class="modal fade" id="editModal" tabindex="-1" aria-hidden="true">
    <!-- Keep existing edit modal -->
</div>

<div class="modal fade" id="deleteConfirmationModal" tabindex="-1" aria-hidden="true">
    <!-- Keep existing delete modal -->
</div>

@section Scripts {
    <script>
        // Keep all existing JavaScript functionality
    </script>
}