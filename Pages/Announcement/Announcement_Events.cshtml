@page
@model HomeownersMS.Pages.Announcement_Events.Announcement_EventsModel
@using HomeownersMS.Models
@{
    Layout = "_ResidentLayout"; // Use the Resident layout
    ViewData["HeaderTitle"] = "Announcement & Events";
    ViewData["Title"] = "Announcement & Events";
}

<style>
    /* General styles */
    .card {
        border-radius: 8px;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        margin-bottom: 20px;
        background-color: white;
    }
    .card-header {
        border-bottom: 1px solid #eee;
        padding: 12px 15px;
        display: flex;
        justify-content: space-between;
        align-items: center;
    }
    .card-body {
        padding: 15px;
    }
    /* Announcement cards */
    .ann-Card {
        overflow: hidden;
        padding: 0px;
        border-radius: 0px !important;
        box-shadow: none !important;
        margin-bottom: 10px;
    }
    .ann-Card .header {
        padding: 0.75rem 1.25rem;
        background-color: #f8f9fa;
        display: flex;
        align-items: center;
    }
    .ann-Card .header .icon {
        width: 24px;
        height: 24px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 8px;
        color: white;
    }
    .ann-Card .content {
        padding: 12px;
    }
    /* Search and filter container */
    .search-filter-container {
        display: flex;
        gap: 10px;
        margin-bottom: 20px;
    }
    .search-filter-container input,
    .search-filter-container button {
        padding: 8px 12px;
        border: 1px solid #ddd;
        border-radius: 4px;
    }
    .search-filter-container button {
        background-color: #007bff;
        color: white;
        border: none;
        cursor: pointer;
    }
    .search-filter-container button:hover {
        background-color: #0056b3;
    }
    /* Accordion */
    .accordion-button {
        background-color: #96c9ff !important;
        color: #000 !important;
        font-weight: bold;
    }
    .accordion-button:not(.collapsed) {
        background-color: #e9ecef !important;
        color: #000 !important;
    }
    .accordion-body {
        padding: 0;
    }
    /* No announcements message */
    .no-announcements {
        text-align: center;
        color: #6c757d;
        font-style: italic;
        padding: 15px;
    }
    .super-small {
        font-size: x-small;
    }
</style>

<!-- Main Content -->
<div class="container-fluid">
    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <div class="d-flex align-items-center">
            <i class="bi bi-megaphone fs-3 me-2"></i>
            <span class="fs-4">Announcements</span>
        </div>
        <div>
            <form method="get" class="search-filter-container">
                <input type="text" id="searchBar" name="SearchTerm" placeholder="Search announcements..." class="form-control" value="@Model.SearchTerm">
                <input type="date" id="datePicker" name="SelectedDate" class="form-control" value="@Model.SelectedDate">
                <button type="submit" id="filterButton" class="btn btn-primary">Filter</button>
                <!-- Reset Filters Button -->
                <a href="@Url.Page("./Announcement_Events")" class="btn btn-secondary">Reset Filters</a>
            </form>
        </div>
    </div>

    <!-- Accordion -->
    <div class="accordion" id="announcementAccordion">
        <!-- Today -->
        <div class="accordion-item border-0 mb-2">
            <h2 class="accordion-header">
                <button class="accordion-button bg-light collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseToday" style="background-color: #96c9ff !important">
                    <i class="bi bi-calendar-day me-2"></i> 
                    <span class="fw-bold">Today</span>&nbsp;
                    <span class="badge rounded-pill bg-primary text-light">@Model.TodayAnnouncements.Count</span>
                </button>
            </h2>
            <div id="collapseToday" class="accordion-collapse collapse" data-bs-parent="#announcementAccordion">
                <div class="accordion-body p-0">
                    @if (Model.TodayAnnouncements.Any())
                    {
                        @foreach (var announcement in Model.TodayAnnouncements)
                        {
                            <div class="ann-Card">
                                <div class="header @GetHeaderColorClass(announcement)">
                                    <span class="fw-bold text-light">@announcement.Title</span>
                                </div>
                                <div class="content p-3">
                                    <p class="mb-1 fw-bold">
                                        @if (announcement.EventDate.HasValue)
                                        {
                                            <span>@announcement.EventDate.Value.ToString("MMM dd, yyyy") @@</span>
                                            @if (announcement.EventTime.HasValue)
                                            {
                                                <span> @announcement.EventTime.Value.ToString("hh:mm tt")</span>
                                            }
                                            else
                                            {
                                                <span>--:--</span>
                                            }
                                        }
                                        else
                                        {
                                            <span>n.d. @@</span>
                                        }
                                    </p>
                                    <p class="mb-1 small text-primary fw-bold">
                                        <i class="bi bi-geo-alt"></i> Blocks @announcement.BlocksAffected
                                    </p>
                                    <p class="mb-2 small text-primary">
                                        <i class="bi bi-telephone"></i> (@announcement.Office) <span class="fw-bold">@announcement.ContactNumber</span>
                                    </p>
                                    <p class="mb-0 text-muted super-small">@announcement.Content</p>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-muted text-center small m-3">
                            <i class="bi bi-exclamation-circle me-2"></i> No announcements today.
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Yesterday -->
        <div class="accordion-item border-0 mb-2">
            <h2 class="accordion-header">
                <button class="accordion-button bg-light collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseYesterday" style="background-color: #96c9ff !important">
                    <i class="bi bi-calendar-minus me-2"></i> 
                    <span class="fw-bold">Yesterday</span>&nbsp;
                    <span class="badge rounded-pill bg-primary text-light">@Model.YesterdayAnnouncements.Count</span>
                </button>
            </h2>
            <div id="collapseYesterday" class="accordion-collapse collapse" data-bs-parent="#announcementAccordion">
                <div class="accordion-body p-0">
                    @if (Model.YesterdayAnnouncements.Any())
                    {
                        @foreach (var announcement in Model.YesterdayAnnouncements)
                        {
                            <div class="ann-Card">
                                <div class="header @GetHeaderColorClass(announcement)">
                                    <span class="fw-bold text-light">@announcement.Title</span>
                                </div>
                                <div class="content p-3">
                                    <p class="mb-1 fw-bold">
                                        @if (announcement.EventDate.HasValue)
                                        {
                                            <span>@announcement.EventDate.Value.ToString("MMM dd, yyyy") @@</span>
                                            @if (announcement.EventTime.HasValue)
                                            {
                                                <span> @announcement.EventTime.Value.ToString("hh:mm tt")</span>
                                            }
                                            else
                                            {
                                                <span>--:--</span>
                                            }
                                        }
                                        else
                                        {
                                            <span>n.d. @@</span>
                                        }
                                    </p>
                                    <p class="mb-1 small text-primary fw-bold">
                                        <i class="bi bi-geo-alt"></i> Blocks @announcement.BlocksAffected
                                    </p>
                                    <p class="mb-2 small text-primary">
                                        <i class="bi bi-telephone"></i> (@announcement.Office) <span class="fw-bold">@announcement.ContactNumber</span>
                                    </p>
                                    <p class="mb-0 text-muted super-small">@announcement.Content</p>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-muted text-center small m-3">
                            <i class="bi bi-exclamation-circle me-2"></i> No announcements yesterday.
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- A Week Ago -->
        <div class="accordion-item border-0">
            <h2 class="accordion-header">
                <button class="accordion-button bg-light collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseWeekAgo" style="background-color: #96c9ff !important">
                    <i class="bi bi-calendar-week me-2"></i> 
                    <span class="fw-bold">Last Week</span>&nbsp;
                    <span class="badge rounded-pill bg-primary text-light">@Model.WeekAgoAnnouncements.Count</span>
                </button>
            </h2>
            <div id="collapseWeekAgo" class="accordion-collapse collapse" data-bs-parent="#announcementAccordion">
                <div class="accordion-body p-0">
                    @if (Model.WeekAgoAnnouncements.Any())
                    {
                        @foreach (var announcement in Model.WeekAgoAnnouncements)
                        {
                            <div class="ann-Card">
                                <div class="header @GetHeaderColorClass(announcement)">
                                    <span class="fw-bold text-light">@announcement.Title</span>
                                </div>
                                <div class="content p-3">
                                    <p class="mb-1 fw-bold">
                                        @if (announcement.EventDate.HasValue)
                                        {
                                            <span>@announcement.EventDate.Value.ToString("MMM dd, yyyy") @@</span>
                                            @if (announcement.EventTime.HasValue)
                                            {
                                                <span> @announcement.EventTime.Value.ToString("hh:mm tt")</span>
                                            }
                                            else
                                            {
                                                <span>--:--</span>
                                            }
                                        }
                                        else
                                        {
                                            <span>n.d. @@</span>
                                        }
                                    </p>
                                    <p class="mb-1 small text-primary fw-bold">
                                        <i class="bi bi-geo-alt"></i> Blocks @announcement.BlocksAffected
                                    </p>
                                    <p class="mb-2 small text-primary">
                                        <i class="bi bi-telephone"></i> (@announcement.Office) <span class="fw-bold">@announcement.ContactNumber</span>
                                    </p>
                                    <p class="mb-0 text-muted super-small">@announcement.Content</p>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-muted text-center small m-3">
                            <i class="bi bi-exclamation-circle me-2"></i> No announcements last week.
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetHeaderColorClass(Models.Announcement item)
    {
        var colors = new[] { "bg-primary", "bg-danger", "bg-success" };
        var index = item.AnnouncementId % colors.Length; // Replace `Id` with the appropriate property if needed
        return colors[index];
    }
}