@page
@model HomeownersMS.Pages.Notifications.IndexModel
@using Microsoft.AspNetCore.Authorization
@using HomeownersMS.Data
@using HomeownersMS.Models
@using Microsoft.AspNetCore.Identity
@{
    if (User.IsInRole("admin"))
    {
        Layout = "_AdminLayout";
    }
    else if (User.IsInRole("staff"))
    {
        Layout = "_StaffLayout";
    }
    else if (User.IsInRole("resident"))
    {
        Layout = "_ResidentLayout";
    }
    else
    {
        Layout = "_Layout"; // Fallback layout
    }
    ViewData["HeaderTitle"] = "Notifications";
    ViewData["Title"] = "Notifications";
}

<style>
    .notification-item {
        border-left: 4px solid transparent;
        padding: 15px;
        margin-bottom: 10px;
        border-radius: 4px;
    }
    .notification-item.unread {
        border-left-color: #0d6efd;
    }
    .notification-time {
        font-size: 0.8rem;
        color: #6c757d;
    }
    .notification-content {
        margin-top: 5px;
    }
    .mark-read-btn {
        font-size: 0.8rem;
        padding: 2px 8px;
    }

    .profile-header {
        position: relative;
        margin-bottom: 30px;
    }

    .profile-banner {
        width: 100%;
        height: 220px;
        object-fit: cover;
        object-position: center;
        border-radius: 12px;
        opacity: 0.9;
    }
</style>

<div class="container">

    <div class="profile-header">
        <!-- Profile Banner -->
        <img src="~/images/mail_box.jpg" alt="Profile Banner" class="img-fluid profile-banner" />

        <!-- Search + Filter Bar Over Image -->
        <div class="announcement-overlay">
            <div class="title d-flex align-items-center mb-3">
                <i class="bi bi-megaphone-fill me-2 fs-3 text-light"></i>
                <h3 class="fw-bold text-light m-0">Stay Updated: Notifications</h3>
            </div>

            <form class="row g-2">
                <div class="col-12">
                    <div class="input-group">
                        <input type="text" class="form-control border-end-0" placeholder="Search..." aria-label="Search">
                        <button class="btn btn-input-icon" type="button"><i class="bi bi-search"></i></button>
                    </div>                  
                </div>
                <div class="col-4 col-md-auto">
                    <input type="date" id="datePicker" name="SelectedDate" class="form-control datepicker" />
                </div>
                <div class="col-4 col-md-auto d-grid">
                    <button type="button" id="filterButton" class="btn btn-primary w-100">Filter</button>
                </div>
                <div class="col-4 col-md-auto d-grid">
                    <a href="@Url.Page("./Notifications")" class="btn btn-secondary w-100">Reset</a>
                </div>
            </form>
        </div>
    </div>
    
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h4>Notifications</h4>
        <form method="post">
            <button type="submit" asp-page-handler="MarkAllAsRead" class="btn btn-primary">Mark All as Read</button>
        </form>
    </div>

    <div class="list-group">
        @foreach (var userNotification in Model.Notifications)
        {
            <div class="list-group-item notification-item card @(!userNotification.IsRead ? "unread" : "")">
                <div class="d-flex w-100 justify-content-between">
                    <span class="mb-1 text-capitalize fw-bold">@userNotification.Notification.Title</span>
                    <small class="notification-time">@userNotification.Notification.CreatedAt.ToString("g")</small>
                </div>
                <p>@userNotification.Notification.MessageType</p>
                <p class="mb-1 notification-content">@Html.Raw(userNotification.Notification.Message)</p>
                <div class="d-flex justify-content-between align-items-center">
                    <div class="d-flex flex-column">
                        <span class="small text-muted">@(userNotification.IsRead ? $"Read on {userNotification.ReadAt?.ToString("g")}" : "Unread")</span>
                        <span class="small text-muted">Submitted by: @(userNotification.Notification?.CreatedByUser?.Username ?? "N/A")</span>
                    </div>
                    @if (!userNotification.IsRead)
                    {
                        <form method="post">
                            <input type="hidden" name="id" value="@userNotification.NotificationId" />
                            <button type="submit" asp-page-handler="MarkAsRead" class="btn btn-sm btn-outline-primary mark-read-btn">Mark as Read</button>
                        </form>
                    }
                </div>
            </div>
        }
    </div>
</div>
